<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picL.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIYAAAD9CAYAAAB5nA+TAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAABnWAAAZ1gEY0crtAAAHpUlE
        QVR4Xu3dIWzUfhjG8QuCIEggCLKgkChCCIIQkiGXYJBIEgxyEjeJnDyJnEROTk4ikZOTyMn++zYpGd13
        213Z+9/b3ld8YHvaK3fHk1/bu97vFk3T6JacnJw0e3t7K1kul83Z2Vl7M97WTcOwuniCPn361Lx7924l
        u7u77c14W7dpZ2en/R9YrOzg4KC9GW/rpmFY3dHR0YUn7TrDbVQQpd3a2mri8Vxlf3+/ewzfv39vb8bb
        umkYVhdPVjxRMcQOlw3FyFK5GE+fPm1/5OW9/vFajGtYjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx
        8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwY
        Vmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZ
        jHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMf
        htVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIh2F1
        FiMfhtVZjHwYVmcx8mFYncXIh2F1FiMfhtVZjHwYVmcx8mFYncXIt4gvlH/y5EkTd3IqXrx40T1R9+7d
        ax4+fHilu3fvduvSdm5b3L87d+5cuM9D9+/f7x7Ds2fPcDs3bblcNou3b992/6jU+/r1a+2hVrfHYghZ
        DCGLIWQxhCyGkMUQshhCFkPIYghZDCGLIWQxhCyGkMUQshhCFkPIYghZDCGLIWQxhCyGkMUQshhCFkPI
        YghZDCGLIWQxhCyGkMUQWmxvb3fFOD09bX/nlbR5Fp8/f+6KEVP+/Pz5s814RW2W7o+Dg4M/0xYdHh62
        Ea+szfHnh+Pj464YMXrEHEx9rs301y8nJyfdBGBRjt3d3Tb6e2VtjgvB79+/u5nbohwfPnxozs7O2vjv
        dTR/GEYZ+tPYmDrRM5bNg2EvJlj1jGUzYXhezEYbZyxbW1tNHIMMl2ueMByKU9h+t+Ixx2bAkHz79q0r
        RxyQDpdpfjC8zMePH7tyxJTCw2WaFwwvE7uR169fd+WIV0uHyzUfGF4lTl3jLCUOSOPV0uFyzQOG14lC
        eKYybxiuInYlsUuJXctwmaYPw1V9+fKlK8ePHz/aX3kdTROGq4rjjdilxOsbw2WaNgzXEe/COmrMD4br
        cNSYJwzX5agxPxiuy1FjfjAcw1FjXjAcI0aNKEZc4DNcpunBcKx4JdTdyTxgONbOzk53rDHMNT0YjtUf
        Z/z69av9ldfRNGA4Vved4O0mPQCdPgzHinddoxhxtddwmaYFw7H6M5O40mu4TNOC4b+IjznGB5aGuaYF
        w7Hi0r8YMbxgePowHCs+lBTF8GLh6cNwrP6qLi8Unj4Mx4qRIorhxxmnD8Ox4tgiiuGn1aYPw7Fibo0w
        zDU9GI4Ro0S8T+IZyTxgOMb+/n63G4m/h8s0PRiuK0aLeMs9eHwxDxiuy9FifjBch6PFPGG4DkeLecJw
        VY4W84Xhqhwt5gvDVcTle/EWu6PFPGF4nZgktp9B2LnH5wnD68TV4O5C5g3Dq/RXgsfcGMNlmg8ML9Nf
        BR6X7nlcMW8Ykn7erZiYLY4xhss1LxgOxQRscfYRZyF+mGgzYHje+e8w8Qxkc2DYO/+tRzHZ/HC55gvD
        0H9PWvAjh5sHw/6l7jiu8MLezXQh6OfujHkunPV3c/35IU5B+1c0429PSTdb90eMDDFCRCl8RVNhEQeW
        Dx486Erhex/qLV69etWVwjMPnbfov0ZzuECbzWIIWQwhiyFkMYQshpDFELIYQhZDyGIIWQwhiyFkMYQs
        hpDFELIYQhZDyGIIWQwhiyFkMYQshpDFELIYQhZDyGIIWQwhiyFkMYQshpDFEFq8f/++K0ZM2/jo0aPm
        5cuX3ZTQyvf8+fPueV/F48ePmzdv3uB2blJMsxXzuS62t7e7Yki9bi9Cw0h1R0dH3QOIec2p9efFlJSx
        7nAbFcT9i8cwzIf6x/t/TsKLYXX9E7W3t9f+yuv0Kh9DWYwbZjHyYVidxciHYXUWIx+G1VmMfBhWZzHy
        YVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhW
        ZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmM
        fBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G
        1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUW
        Ix+G1VmMfBhWZzHyYVidxciHYXUWIx+G1VmMfBhWZzHyYVidxciHYXUWIx+G1R0fH3dP1DqG26ggikH3
        9TIWYwUxWqxquVy2N+Ht3KbDw0O8v5c5PT1tb8bbulnN4j+JTta8zrQBRgAAAABJRU5ErkJggg==
</value>
  </data>
</root>